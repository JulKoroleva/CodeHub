{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.array.unshift.js\");\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// declare global: diff_match_patch, DIFF_INSERT, DIFF_DELETE, DIFF_EQUAL\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\")); // Note non-packaged dependency diff_match_patch\n  else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\", \"diff_match_patch\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var Pos = CodeMirror.Pos;\n  var svgNS = \"http://www.w3.org/2000/svg\";\n  function DiffView(mv, type) {\n    this.mv = mv;\n    this.type = type;\n    this.classes = type == \"left\" ? {\n      chunk: \"CodeMirror-merge-l-chunk\",\n      start: \"CodeMirror-merge-l-chunk-start\",\n      end: \"CodeMirror-merge-l-chunk-end\",\n      insert: \"CodeMirror-merge-l-inserted\",\n      del: \"CodeMirror-merge-l-deleted\",\n      connect: \"CodeMirror-merge-l-connect\"\n    } : {\n      chunk: \"CodeMirror-merge-r-chunk\",\n      start: \"CodeMirror-merge-r-chunk-start\",\n      end: \"CodeMirror-merge-r-chunk-end\",\n      insert: \"CodeMirror-merge-r-inserted\",\n      del: \"CodeMirror-merge-r-deleted\",\n      connect: \"CodeMirror-merge-r-connect\"\n    };\n  }\n  DiffView.prototype = {\n    constructor: DiffView,\n    init: function (pane, orig, options) {\n      this.edit = this.mv.edit;\n      ;\n      (this.edit.state.diffViews || (this.edit.state.diffViews = [])).push(this);\n      this.orig = CodeMirror(pane, copyObj({\n        value: orig,\n        readOnly: !this.mv.options.allowEditingOriginals\n      }, copyObj(options)));\n      if (this.mv.options.connect == \"align\") {\n        if (!this.edit.state.trackAlignable) this.edit.state.trackAlignable = new TrackAlignable(this.edit);\n        this.orig.state.trackAlignable = new TrackAlignable(this.orig);\n      }\n      this.lockButton.title = this.edit.phrase(\"Toggle locked scrolling\");\n      this.lockButton.setAttribute(\"aria-label\", this.lockButton.title);\n      this.orig.state.diffViews = [this];\n      var classLocation = options.chunkClassLocation || \"background\";\n      if (Object.prototype.toString.call(classLocation) != \"[object Array]\") classLocation = [classLocation];\n      this.classes.classLocation = classLocation;\n      this.diff = getDiff(asString(orig), asString(options.value), this.mv.options.ignoreWhitespace);\n      this.chunks = getChunks(this.diff);\n      this.diffOutOfDate = this.dealigned = false;\n      this.needsScrollSync = null;\n      this.showDifferences = options.showDifferences !== false;\n    },\n    registerEvents: function (otherDv) {\n      this.forceUpdate = registerUpdate(this);\n      setScrollLock(this, true, false);\n      registerScroll(this, otherDv);\n    },\n    setShowDifferences: function (val) {\n      val = val !== false;\n      if (val != this.showDifferences) {\n        this.showDifferences = val;\n        this.forceUpdate(\"full\");\n      }\n    }\n  };\n  function ensureDiff(dv) {\n    if (dv.diffOutOfDate) {\n      dv.diff = getDiff(dv.orig.getValue(), dv.edit.getValue(), dv.mv.options.ignoreWhitespace);\n      dv.chunks = getChunks(dv.diff);\n      dv.diffOutOfDate = false;\n      CodeMirror.signal(dv.edit, \"updateDiff\", dv.diff);\n    }\n  }\n  var updating = false;\n  function registerUpdate(dv) {\n    var edit = {\n      from: 0,\n      to: 0,\n      marked: []\n    };\n    var orig = {\n      from: 0,\n      to: 0,\n      marked: []\n    };\n    var debounceChange,\n      updatingFast = false;\n    function update(mode) {\n      updating = true;\n      updatingFast = false;\n      if (mode == \"full\") {\n        if (dv.svg) clear(dv.svg);\n        if (dv.copyButtons) clear(dv.copyButtons);\n        clearMarks(dv.edit, edit.marked, dv.classes);\n        clearMarks(dv.orig, orig.marked, dv.classes);\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      ensureDiff(dv);\n      if (dv.showDifferences) {\n        updateMarks(dv.edit, dv.diff, edit, DIFF_INSERT, dv.classes);\n        updateMarks(dv.orig, dv.diff, orig, DIFF_DELETE, dv.classes);\n      }\n      if (dv.mv.options.connect == \"align\") alignChunks(dv);\n      makeConnections(dv);\n      if (dv.needsScrollSync != null) syncScroll(dv, dv.needsScrollSync);\n      updating = false;\n    }\n    function setDealign(fast) {\n      if (updating) return;\n      dv.dealigned = true;\n      set(fast);\n    }\n    function set(fast) {\n      if (updating || updatingFast) return;\n      clearTimeout(debounceChange);\n      if (fast === true) updatingFast = true;\n      debounceChange = setTimeout(update, fast === true ? 20 : 250);\n    }\n    function change(_cm, change) {\n      if (!dv.diffOutOfDate) {\n        dv.diffOutOfDate = true;\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      // Update faster when a line was added/removed\n      setDealign(change.text.length - 1 != change.to.line - change.from.line);\n    }\n    function swapDoc() {\n      dv.diffOutOfDate = true;\n      dv.dealigned = true;\n      update(\"full\");\n    }\n    dv.edit.on(\"change\", change);\n    dv.orig.on(\"change\", change);\n    dv.edit.on(\"swapDoc\", swapDoc);\n    dv.orig.on(\"swapDoc\", swapDoc);\n    if (dv.mv.options.connect == \"align\") {\n      CodeMirror.on(dv.edit.state.trackAlignable, \"realign\", setDealign);\n      CodeMirror.on(dv.orig.state.trackAlignable, \"realign\", setDealign);\n    }\n    dv.edit.on(\"viewportChange\", function () {\n      set(false);\n    });\n    dv.orig.on(\"viewportChange\", function () {\n      set(false);\n    });\n    update();\n    return update;\n  }\n  function registerScroll(dv, otherDv) {\n    dv.edit.on(\"scroll\", function () {\n      syncScroll(dv, true) && makeConnections(dv);\n    });\n    dv.orig.on(\"scroll\", function () {\n      syncScroll(dv, false) && makeConnections(dv);\n      if (otherDv) syncScroll(otherDv, true) && makeConnections(otherDv);\n    });\n  }\n  function syncScroll(dv, toOrig) {\n    // Change handler will do a refresh after a timeout when diff is out of date\n    if (dv.diffOutOfDate) {\n      if (dv.lockScroll && dv.needsScrollSync == null) dv.needsScrollSync = toOrig;\n      return false;\n    }\n    dv.needsScrollSync = null;\n    if (!dv.lockScroll) return true;\n    var editor,\n      other,\n      now = +new Date();\n    if (toOrig) {\n      editor = dv.edit;\n      other = dv.orig;\n    } else {\n      editor = dv.orig;\n      other = dv.edit;\n    }\n    // Don't take action if the position of this editor was recently set\n    // (to prevent feedback loops)\n    if (editor.state.scrollSetBy == dv && (editor.state.scrollSetAt || 0) + 250 > now) return false;\n    var sInfo = editor.getScrollInfo();\n    if (dv.mv.options.connect == \"align\") {\n      targetPos = sInfo.top;\n    } else {\n      var halfScreen = .5 * sInfo.clientHeight,\n        midY = sInfo.top + halfScreen;\n      var mid = editor.lineAtHeight(midY, \"local\");\n      var around = chunkBoundariesAround(dv.chunks, mid, toOrig);\n      var off = getOffsets(editor, toOrig ? around.edit : around.orig);\n      var offOther = getOffsets(other, toOrig ? around.orig : around.edit);\n      var ratio = (midY - off.top) / (off.bot - off.top);\n      var targetPos = offOther.top - halfScreen + ratio * (offOther.bot - offOther.top);\n      var botDist, mix;\n      // Some careful tweaking to make sure no space is left out of view\n      // when scrolling to top or bottom.\n      if (targetPos > sInfo.top && (mix = sInfo.top / halfScreen) < 1) {\n        targetPos = targetPos * mix + sInfo.top * (1 - mix);\n      } else if ((botDist = sInfo.height - sInfo.clientHeight - sInfo.top) < halfScreen) {\n        var otherInfo = other.getScrollInfo();\n        var botDistOther = otherInfo.height - otherInfo.clientHeight - targetPos;\n        if (botDistOther > botDist && (mix = botDist / halfScreen) < 1) targetPos = targetPos * mix + (otherInfo.height - otherInfo.clientHeight - botDist) * (1 - mix);\n      }\n    }\n    other.scrollTo(sInfo.left, targetPos);\n    other.state.scrollSetAt = now;\n    other.state.scrollSetBy = dv;\n    return true;\n  }\n  function getOffsets(editor, around) {\n    var bot = around.after;\n    if (bot == null) bot = editor.lastLine() + 1;\n    return {\n      top: editor.heightAtLine(around.before || 0, \"local\"),\n      bot: editor.heightAtLine(bot, \"local\")\n    };\n  }\n  function setScrollLock(dv, val, action) {\n    dv.lockScroll = val;\n    if (val && action != false) syncScroll(dv, DIFF_INSERT) && makeConnections(dv);\n    (val ? CodeMirror.addClass : CodeMirror.rmClass)(dv.lockButton, \"CodeMirror-merge-scrolllock-enabled\");\n  }\n\n  // Updating the marks for editor content\n\n  function removeClass(editor, line, classes) {\n    var locs = classes.classLocation;\n    for (var i = 0; i < locs.length; i++) {\n      editor.removeLineClass(line, locs[i], classes.chunk);\n      editor.removeLineClass(line, locs[i], classes.start);\n      editor.removeLineClass(line, locs[i], classes.end);\n    }\n  }\n  function clearMarks(editor, arr, classes) {\n    for (var i = 0; i < arr.length; ++i) {\n      var mark = arr[i];\n      if (mark instanceof CodeMirror.TextMarker) mark.clear();else if (mark.parent) removeClass(editor, mark, classes);\n    }\n    arr.length = 0;\n  }\n\n  // FIXME maybe add a margin around viewport to prevent too many updates\n  function updateMarks(editor, diff, state, type, classes) {\n    var vp = editor.getViewport();\n    editor.operation(function () {\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        clearMarks(editor, state.marked, classes);\n        markChanges(editor, diff, type, state.marked, vp.from, vp.to, classes);\n        state.from = vp.from;\n        state.to = vp.to;\n      } else {\n        if (vp.from < state.from) {\n          markChanges(editor, diff, type, state.marked, vp.from, state.from, classes);\n          state.from = vp.from;\n        }\n        if (vp.to > state.to) {\n          markChanges(editor, diff, type, state.marked, state.to, vp.to, classes);\n          state.to = vp.to;\n        }\n      }\n    });\n  }\n  function addClass(editor, lineNr, classes, main, start, end) {\n    var locs = classes.classLocation,\n      line = editor.getLineHandle(lineNr);\n    for (var i = 0; i < locs.length; i++) {\n      if (main) editor.addLineClass(line, locs[i], classes.chunk);\n      if (start) editor.addLineClass(line, locs[i], classes.start);\n      if (end) editor.addLineClass(line, locs[i], classes.end);\n    }\n    return line;\n  }\n  function markChanges(editor, diff, type, marks, from, to, classes) {\n    var pos = Pos(0, 0);\n    var top = Pos(from, 0),\n      bot = editor.clipPos(Pos(to - 1));\n    var cls = type == DIFF_DELETE ? classes.del : classes.insert;\n    function markChunk(start, end) {\n      var bfrom = Math.max(from, start),\n        bto = Math.min(to, end);\n      for (var i = bfrom; i < bto; ++i) marks.push(addClass(editor, i, classes, true, i == start, i == end - 1));\n      // When the chunk is empty, make sure a horizontal line shows up\n      if (start == end && bfrom == end && bto == end) {\n        if (bfrom) marks.push(addClass(editor, bfrom - 1, classes, false, false, true));else marks.push(addClass(editor, bfrom, classes, false, true, false));\n      }\n    }\n    var chunkStart = 0,\n      pending = false;\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i],\n        tp = part[0],\n        str = part[1];\n      if (tp == DIFF_EQUAL) {\n        var cleanFrom = pos.line + (startOfLineClean(diff, i) ? 0 : 1);\n        moveOver(pos, str);\n        var cleanTo = pos.line + (endOfLineClean(diff, i) ? 1 : 0);\n        if (cleanTo > cleanFrom) {\n          if (pending) {\n            markChunk(chunkStart, cleanFrom);\n            pending = false;\n          }\n          chunkStart = cleanTo;\n        }\n      } else {\n        pending = true;\n        if (tp == type) {\n          var end = moveOver(pos, str, true);\n          var a = posMax(top, pos),\n            b = posMin(bot, end);\n          if (!posEq(a, b)) marks.push(editor.markText(a, b, {\n            className: cls\n          }));\n          pos = end;\n        }\n      }\n    }\n    if (pending) markChunk(chunkStart, pos.line + 1);\n  }\n\n  // Updating the gap between editor and original\n\n  function makeConnections(dv) {\n    if (!dv.showDifferences) return;\n    if (dv.svg) {\n      clear(dv.svg);\n      var w = dv.gap.offsetWidth;\n      attrs(dv.svg, \"width\", w, \"height\", dv.gap.offsetHeight);\n    }\n    if (dv.copyButtons) clear(dv.copyButtons);\n    var vpEdit = dv.edit.getViewport(),\n      vpOrig = dv.orig.getViewport();\n    var outerTop = dv.mv.wrap.getBoundingClientRect().top;\n    var sTopEdit = outerTop - dv.edit.getScrollerElement().getBoundingClientRect().top + dv.edit.getScrollInfo().top;\n    var sTopOrig = outerTop - dv.orig.getScrollerElement().getBoundingClientRect().top + dv.orig.getScrollInfo().top;\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var ch = dv.chunks[i];\n      if (ch.editFrom <= vpEdit.to && ch.editTo >= vpEdit.from && ch.origFrom <= vpOrig.to && ch.origTo >= vpOrig.from) drawConnectorsForChunk(dv, ch, sTopOrig, sTopEdit, w);\n    }\n  }\n  function getMatchingOrigLine(editLine, chunks) {\n    var editStart = 0,\n      origStart = 0;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      if (chunk.editTo > editLine && chunk.editFrom <= editLine) return null;\n      if (chunk.editFrom > editLine) break;\n      editStart = chunk.editTo;\n      origStart = chunk.origTo;\n    }\n    return origStart + (editLine - editStart);\n  }\n\n  // Combines information about chunks and widgets/markers to return\n  // an array of lines, in a single editor, that probably need to be\n  // aligned with their counterparts in the editor next to it.\n  function alignableFor(cm, chunks, isOrig) {\n    var tracker = cm.state.trackAlignable;\n    var start = cm.firstLine(),\n      trackI = 0;\n    var result = [];\n    for (var i = 0;; i++) {\n      var chunk = chunks[i];\n      var chunkStart = !chunk ? 1e9 : isOrig ? chunk.origFrom : chunk.editFrom;\n      for (; trackI < tracker.alignable.length; trackI += 2) {\n        var n = tracker.alignable[trackI] + 1;\n        if (n <= start) continue;\n        if (n <= chunkStart) result.push(n);else break;\n      }\n      if (!chunk) break;\n      result.push(start = isOrig ? chunk.origTo : chunk.editTo);\n    }\n    return result;\n  }\n\n  // Given information about alignable lines in two editors, fill in\n  // the result (an array of three-element arrays) to reflect the\n  // lines that need to be aligned with each other.\n  function mergeAlignable(result, origAlignable, chunks, setIndex) {\n    var rI = 0,\n      origI = 0,\n      chunkI = 0,\n      diff = 0;\n    outer: for (;; rI++) {\n      var nextR = result[rI],\n        nextO = origAlignable[origI];\n      if (!nextR && nextO == null) break;\n      var rLine = nextR ? nextR[0] : 1e9,\n        oLine = nextO == null ? 1e9 : nextO;\n      while (chunkI < chunks.length) {\n        var chunk = chunks[chunkI];\n        if (chunk.origFrom <= oLine && chunk.origTo > oLine) {\n          origI++;\n          rI--;\n          continue outer;\n        }\n        if (chunk.editTo > rLine) {\n          if (chunk.editFrom <= rLine) continue outer;\n          break;\n        }\n        diff += chunk.origTo - chunk.origFrom - (chunk.editTo - chunk.editFrom);\n        chunkI++;\n      }\n      if (rLine == oLine - diff) {\n        nextR[setIndex] = oLine;\n        origI++;\n      } else if (rLine < oLine - diff) {\n        nextR[setIndex] = rLine + diff;\n      } else {\n        var record = [oLine - diff, null, null];\n        record[setIndex] = oLine;\n        result.splice(rI, 0, record);\n        origI++;\n      }\n    }\n  }\n  function findAlignedLines(dv, other) {\n    var alignable = alignableFor(dv.edit, dv.chunks, false),\n      result = [];\n    if (other) for (var i = 0, j = 0; i < other.chunks.length; i++) {\n      var n = other.chunks[i].editTo;\n      while (j < alignable.length && alignable[j] < n) j++;\n      if (j == alignable.length || alignable[j] != n) alignable.splice(j++, 0, n);\n    }\n    for (var i = 0; i < alignable.length; i++) result.push([alignable[i], null, null]);\n    mergeAlignable(result, alignableFor(dv.orig, dv.chunks, true), dv.chunks, 1);\n    if (other) mergeAlignable(result, alignableFor(other.orig, other.chunks, true), other.chunks, 2);\n    return result;\n  }\n  function alignChunks(dv, force) {\n    if (!dv.dealigned && !force) return;\n    if (!dv.orig.curOp) return dv.orig.operation(function () {\n      alignChunks(dv, force);\n    });\n    dv.dealigned = false;\n    var other = dv.mv.left == dv ? dv.mv.right : dv.mv.left;\n    if (other) {\n      ensureDiff(other);\n      other.dealigned = false;\n    }\n    var linesToAlign = findAlignedLines(dv, other);\n\n    // Clear old aligners\n    var aligners = dv.mv.aligners;\n    for (var i = 0; i < aligners.length; i++) aligners[i].clear();\n    aligners.length = 0;\n    var cm = [dv.edit, dv.orig],\n      scroll = [],\n      offset = [];\n    if (other) cm.push(other.orig);\n    for (var i = 0; i < cm.length; i++) {\n      scroll.push(cm[i].getScrollInfo().top);\n      offset.push(-cm[i].getScrollerElement().getBoundingClientRect().top);\n    }\n    if (offset[0] != offset[1] || cm.length == 3 && offset[1] != offset[2]) alignLines(cm, offset, [0, 0, 0], aligners);\n    for (var ln = 0; ln < linesToAlign.length; ln++) alignLines(cm, offset, linesToAlign[ln], aligners);\n    for (var i = 0; i < cm.length; i++) cm[i].scrollTo(null, scroll[i]);\n  }\n  function alignLines(cm, cmOffset, lines, aligners) {\n    var maxOffset = -1e8,\n      offset = [];\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var off = cm[i].heightAtLine(lines[i], \"local\") - cmOffset[i];\n      offset[i] = off;\n      maxOffset = Math.max(maxOffset, off);\n    }\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var diff = maxOffset - offset[i];\n      if (diff > 1) aligners.push(padAbove(cm[i], lines[i], diff));\n    }\n  }\n  function padAbove(cm, line, size) {\n    var above = true;\n    if (line > cm.lastLine()) {\n      line--;\n      above = false;\n    }\n    var elt = document.createElement(\"div\");\n    elt.className = \"CodeMirror-merge-spacer\";\n    elt.style.height = size + \"px\";\n    elt.style.minWidth = \"1px\";\n    return cm.addLineWidget(line, elt, {\n      height: size,\n      above: above,\n      mergeSpacer: true,\n      handleMouseEvents: true\n    });\n  }\n  function drawConnectorsForChunk(dv, chunk, sTopOrig, sTopEdit, w) {\n    var flip = dv.type == \"left\";\n    var top = dv.orig.heightAtLine(chunk.origFrom, \"local\", true) - sTopOrig;\n    if (dv.svg) {\n      var topLpx = top;\n      var topRpx = dv.edit.heightAtLine(chunk.editFrom, \"local\", true) - sTopEdit;\n      if (flip) {\n        var tmp = topLpx;\n        topLpx = topRpx;\n        topRpx = tmp;\n      }\n      var botLpx = dv.orig.heightAtLine(chunk.origTo, \"local\", true) - sTopOrig;\n      var botRpx = dv.edit.heightAtLine(chunk.editTo, \"local\", true) - sTopEdit;\n      if (flip) {\n        var tmp = botLpx;\n        botLpx = botRpx;\n        botRpx = tmp;\n      }\n      var curveTop = \" C \" + w / 2 + \" \" + topRpx + \" \" + w / 2 + \" \" + topLpx + \" \" + (w + 2) + \" \" + topLpx;\n      var curveBot = \" C \" + w / 2 + \" \" + botLpx + \" \" + w / 2 + \" \" + botRpx + \" -1 \" + botRpx;\n      attrs(dv.svg.appendChild(document.createElementNS(svgNS, \"path\")), \"d\", \"M -1 \" + topRpx + curveTop + \" L \" + (w + 2) + \" \" + botLpx + curveBot + \" z\", \"class\", dv.classes.connect);\n    }\n    if (dv.copyButtons) {\n      var copy = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"left\" ? \"\\u21dd\" : \"\\u21dc\", \"CodeMirror-merge-copy\"));\n      var editOriginals = dv.mv.options.allowEditingOriginals;\n      copy.title = dv.edit.phrase(editOriginals ? \"Push to left\" : \"Revert chunk\");\n      copy.chunk = chunk;\n      copy.style.top = (chunk.origTo > chunk.origFrom ? top : dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit) + \"px\";\n      copy.setAttribute(\"role\", \"button\");\n      copy.setAttribute(\"tabindex\", \"0\");\n      copy.setAttribute(\"aria-label\", copy.title);\n      if (editOriginals) {\n        var topReverse = dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit;\n        var copyReverse = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"right\" ? \"\\u21dd\" : \"\\u21dc\", \"CodeMirror-merge-copy-reverse\"));\n        copyReverse.title = \"Push to right\";\n        copyReverse.chunk = {\n          editFrom: chunk.origFrom,\n          editTo: chunk.origTo,\n          origFrom: chunk.editFrom,\n          origTo: chunk.editTo\n        };\n        copyReverse.style.top = topReverse + \"px\";\n        dv.type == \"right\" ? copyReverse.style.left = \"2px\" : copyReverse.style.right = \"2px\";\n        copyReverse.setAttribute(\"role\", \"button\");\n        copyReverse.setAttribute(\"tabindex\", \"0\");\n        copyReverse.setAttribute(\"aria-label\", copyReverse.title);\n      }\n    }\n  }\n  function copyChunk(dv, to, from, chunk) {\n    if (dv.diffOutOfDate) return;\n    var origStart = chunk.origTo > from.lastLine() ? Pos(chunk.origFrom - 1) : Pos(chunk.origFrom, 0);\n    var origEnd = Pos(chunk.origTo, 0);\n    var editStart = chunk.editTo > to.lastLine() ? Pos(chunk.editFrom - 1) : Pos(chunk.editFrom, 0);\n    var editEnd = Pos(chunk.editTo, 0);\n    var handler = dv.mv.options.revertChunk;\n    if (handler) handler(dv.mv, from, origStart, origEnd, to, editStart, editEnd);else to.replaceRange(from.getRange(origStart, origEnd), editStart, editEnd);\n  }\n\n  // Merge view, containing 0, 1, or 2 diff views.\n\n  var MergeView = CodeMirror.MergeView = function (node, options) {\n    if (!(this instanceof MergeView)) return new MergeView(node, options);\n    this.options = options;\n    var origLeft = options.origLeft,\n      origRight = options.origRight == null ? options.orig : options.origRight;\n    var hasLeft = origLeft != null,\n      hasRight = origRight != null;\n    var panes = 1 + (hasLeft ? 1 : 0) + (hasRight ? 1 : 0);\n    var wrap = [],\n      left = this.left = null,\n      right = this.right = null;\n    var self = this;\n    if (hasLeft) {\n      left = this.left = new DiffView(this, \"left\");\n      var leftPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-left\");\n      wrap.push(leftPane);\n      wrap.push(buildGap(left));\n    }\n    var editPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-editor\");\n    wrap.push(editPane);\n    if (hasRight) {\n      right = this.right = new DiffView(this, \"right\");\n      wrap.push(buildGap(right));\n      var rightPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-right\");\n      wrap.push(rightPane);\n    }\n    (hasRight ? rightPane : editPane).className += \" CodeMirror-merge-pane-rightmost\";\n    wrap.push(elt(\"div\", null, null, \"height: 0; clear: both;\"));\n    var wrapElt = this.wrap = node.appendChild(elt(\"div\", wrap, \"CodeMirror-merge CodeMirror-merge-\" + panes + \"pane\"));\n    this.edit = CodeMirror(editPane, copyObj(options));\n    if (left) left.init(leftPane, origLeft, options);\n    if (right) right.init(rightPane, origRight, options);\n    if (options.collapseIdentical) this.editor().operation(function () {\n      collapseIdenticalStretches(self, options.collapseIdentical);\n    });\n    if (options.connect == \"align\") {\n      this.aligners = [];\n      alignChunks(this.left || this.right, true);\n    }\n    if (left) left.registerEvents(right);\n    if (right) right.registerEvents(left);\n    var onResize = function () {\n      if (left) makeConnections(left);\n      if (right) makeConnections(right);\n    };\n    CodeMirror.on(window, \"resize\", onResize);\n    var resizeInterval = setInterval(function () {\n      for (var p = wrapElt.parentNode; p && p != document.body; p = p.parentNode) {}\n      if (!p) {\n        clearInterval(resizeInterval);\n        CodeMirror.off(window, \"resize\", onResize);\n      }\n    }, 5000);\n  };\n  function buildGap(dv) {\n    var lock = dv.lockButton = elt(\"div\", null, \"CodeMirror-merge-scrolllock\");\n    lock.setAttribute(\"role\", \"button\");\n    lock.setAttribute(\"tabindex\", \"0\");\n    var lockWrap = elt(\"div\", [lock], \"CodeMirror-merge-scrolllock-wrap\");\n    CodeMirror.on(lock, \"click\", function () {\n      setScrollLock(dv, !dv.lockScroll);\n    });\n    CodeMirror.on(lock, \"keyup\", function (e) {\n      (e.key === \"Enter\" || e.code === \"Space\") && setScrollLock(dv, !dv.lockScroll);\n    });\n    var gapElts = [lockWrap];\n    if (dv.mv.options.revertButtons !== false) {\n      dv.copyButtons = elt(\"div\", null, \"CodeMirror-merge-copybuttons-\" + dv.type);\n      var copyButtons = function (e) {\n        var node = e.target || e.srcElement;\n        if (!node.chunk) return;\n        if (node.className == \"CodeMirror-merge-copy-reverse\") {\n          copyChunk(dv, dv.orig, dv.edit, node.chunk);\n          return;\n        }\n        copyChunk(dv, dv.edit, dv.orig, node.chunk);\n      };\n      CodeMirror.on(dv.copyButtons, \"click\", copyButtons);\n      CodeMirror.on(dv.copyButtons, \"keyup\", function (e) {\n        (e.key === \"Enter\" || e.code === \"Space\") && copyButtons(e);\n      });\n      gapElts.unshift(dv.copyButtons);\n    }\n    if (dv.mv.options.connect != \"align\") {\n      var svg = document.createElementNS && document.createElementNS(svgNS, \"svg\");\n      if (svg && !svg.createSVGRect) svg = null;\n      dv.svg = svg;\n      if (svg) gapElts.push(svg);\n    }\n    return dv.gap = elt(\"div\", gapElts, \"CodeMirror-merge-gap\");\n  }\n  MergeView.prototype = {\n    constructor: MergeView,\n    editor: function () {\n      return this.edit;\n    },\n    rightOriginal: function () {\n      return this.right && this.right.orig;\n    },\n    leftOriginal: function () {\n      return this.left && this.left.orig;\n    },\n    setShowDifferences: function (val) {\n      if (this.right) this.right.setShowDifferences(val);\n      if (this.left) this.left.setShowDifferences(val);\n    },\n    rightChunks: function () {\n      if (this.right) {\n        ensureDiff(this.right);\n        return this.right.chunks;\n      }\n    },\n    leftChunks: function () {\n      if (this.left) {\n        ensureDiff(this.left);\n        return this.left.chunks;\n      }\n    }\n  };\n  function asString(obj) {\n    if (typeof obj == \"string\") return obj;else return obj.getValue();\n  }\n\n  // Operations on diffs\n  var dmp;\n  function getDiff(a, b, ignoreWhitespace) {\n    if (!dmp) dmp = new diff_match_patch();\n    var diff = dmp.diff_main(a, b);\n    // The library sometimes leaves in empty parts, which confuse the algorithm\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i];\n      if (ignoreWhitespace ? !/[^ \\t]/.test(part[1]) : !part[1]) {\n        diff.splice(i--, 1);\n      } else if (i && diff[i - 1][0] == part[0]) {\n        diff.splice(i--, 1);\n        diff[i][1] += part[1];\n      }\n    }\n    return diff;\n  }\n  function getChunks(diff) {\n    var chunks = [];\n    if (!diff.length) return chunks;\n    var startEdit = 0,\n      startOrig = 0;\n    var edit = Pos(0, 0),\n      orig = Pos(0, 0);\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i],\n        tp = part[0];\n      if (tp == DIFF_EQUAL) {\n        var startOff = !startOfLineClean(diff, i) || edit.line < startEdit || orig.line < startOrig ? 1 : 0;\n        var cleanFromEdit = edit.line + startOff,\n          cleanFromOrig = orig.line + startOff;\n        moveOver(edit, part[1], null, orig);\n        var endOff = endOfLineClean(diff, i) ? 1 : 0;\n        var cleanToEdit = edit.line + endOff,\n          cleanToOrig = orig.line + endOff;\n        if (cleanToEdit > cleanFromEdit) {\n          if (i) chunks.push({\n            origFrom: startOrig,\n            origTo: cleanFromOrig,\n            editFrom: startEdit,\n            editTo: cleanFromEdit\n          });\n          startEdit = cleanToEdit;\n          startOrig = cleanToOrig;\n        }\n      } else {\n        moveOver(tp == DIFF_INSERT ? edit : orig, part[1]);\n      }\n    }\n    if (startEdit <= edit.line || startOrig <= orig.line) chunks.push({\n      origFrom: startOrig,\n      origTo: orig.line + 1,\n      editFrom: startEdit,\n      editTo: edit.line + 1\n    });\n    return chunks;\n  }\n  function endOfLineClean(diff, i) {\n    if (i == diff.length - 1) return true;\n    var next = diff[i + 1][1];\n    if (next.length == 1 && i < diff.length - 2 || next.charCodeAt(0) != 10) return false;\n    if (i == diff.length - 2) return true;\n    next = diff[i + 2][1];\n    return (next.length > 1 || i == diff.length - 3) && next.charCodeAt(0) == 10;\n  }\n  function startOfLineClean(diff, i) {\n    if (i == 0) return true;\n    var last = diff[i - 1][1];\n    if (last.charCodeAt(last.length - 1) != 10) return false;\n    if (i == 1) return true;\n    last = diff[i - 2][1];\n    return last.charCodeAt(last.length - 1) == 10;\n  }\n  function chunkBoundariesAround(chunks, n, nInEdit) {\n    var beforeE, afterE, beforeO, afterO;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var fromLocal = nInEdit ? chunk.editFrom : chunk.origFrom;\n      var toLocal = nInEdit ? chunk.editTo : chunk.origTo;\n      if (afterE == null) {\n        if (fromLocal > n) {\n          afterE = chunk.editFrom;\n          afterO = chunk.origFrom;\n        } else if (toLocal > n) {\n          afterE = chunk.editTo;\n          afterO = chunk.origTo;\n        }\n      }\n      if (toLocal <= n) {\n        beforeE = chunk.editTo;\n        beforeO = chunk.origTo;\n      } else if (fromLocal <= n) {\n        beforeE = chunk.editFrom;\n        beforeO = chunk.origFrom;\n      }\n    }\n    return {\n      edit: {\n        before: beforeE,\n        after: afterE\n      },\n      orig: {\n        before: beforeO,\n        after: afterO\n      }\n    };\n  }\n  function collapseSingle(cm, from, to) {\n    cm.addLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    var widget = document.createElement(\"span\");\n    widget.className = \"CodeMirror-merge-collapsed-widget\";\n    widget.title = cm.phrase(\"Identical text collapsed. Click to expand.\");\n    var mark = cm.markText(Pos(from, 0), Pos(to - 1), {\n      inclusiveLeft: true,\n      inclusiveRight: true,\n      replacedWith: widget,\n      clearOnEnter: true\n    });\n    function clear() {\n      mark.clear();\n      cm.removeLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    }\n    if (mark.explicitlyCleared) clear();\n    CodeMirror.on(widget, \"click\", clear);\n    mark.on(\"clear\", clear);\n    CodeMirror.on(widget, \"click\", clear);\n    return {\n      mark: mark,\n      clear: clear\n    };\n  }\n  function collapseStretch(size, editors) {\n    var marks = [];\n    function clear() {\n      for (var i = 0; i < marks.length; i++) marks[i].clear();\n    }\n    for (var i = 0; i < editors.length; i++) {\n      var editor = editors[i];\n      var mark = collapseSingle(editor.cm, editor.line, editor.line + size);\n      marks.push(mark);\n      mark.mark.on(\"clear\", clear);\n    }\n    return marks[0].mark;\n  }\n  function unclearNearChunks(dv, margin, off, clear) {\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var chunk = dv.chunks[i];\n      for (var l = chunk.editFrom - margin; l < chunk.editTo + margin; l++) {\n        var pos = l + off;\n        if (pos >= 0 && pos < clear.length) clear[pos] = false;\n      }\n    }\n  }\n  function collapseIdenticalStretches(mv, margin) {\n    if (typeof margin != \"number\") margin = 2;\n    var clear = [],\n      edit = mv.editor(),\n      off = edit.firstLine();\n    for (var l = off, e = edit.lastLine(); l <= e; l++) clear.push(true);\n    if (mv.left) unclearNearChunks(mv.left, margin, off, clear);\n    if (mv.right) unclearNearChunks(mv.right, margin, off, clear);\n    for (var i = 0; i < clear.length; i++) {\n      if (clear[i]) {\n        var line = i + off;\n        for (var size = 1; i < clear.length - 1 && clear[i + 1]; i++, size++) {}\n        if (size > margin) {\n          var editors = [{\n            line: line,\n            cm: edit\n          }];\n          if (mv.left) editors.push({\n            line: getMatchingOrigLine(line, mv.left.chunks),\n            cm: mv.left.orig\n          });\n          if (mv.right) editors.push({\n            line: getMatchingOrigLine(line, mv.right.chunks),\n            cm: mv.right.orig\n          });\n          var mark = collapseStretch(size, editors);\n          if (mv.options.onCollapse) mv.options.onCollapse(mv, line, size, mark);\n        }\n      }\n    }\n  }\n\n  // General utilities\n\n  function elt(tag, content, className, style) {\n    var e = document.createElement(tag);\n    if (className) e.className = className;\n    if (style) e.style.cssText = style;\n    if (typeof content == \"string\") e.appendChild(document.createTextNode(content));else if (content) for (var i = 0; i < content.length; ++i) e.appendChild(content[i]);\n    return e;\n  }\n  function clear(node) {\n    for (var count = node.childNodes.length; count > 0; --count) node.removeChild(node.firstChild);\n  }\n  function attrs(elt) {\n    for (var i = 1; i < arguments.length; i += 2) elt.setAttribute(arguments[i], arguments[i + 1]);\n  }\n  function copyObj(obj, target) {\n    if (!target) target = {};\n    for (var prop in obj) if (obj.hasOwnProperty(prop)) target[prop] = obj[prop];\n    return target;\n  }\n  function moveOver(pos, str, copy, other) {\n    var out = copy ? Pos(pos.line, pos.ch) : pos,\n      at = 0;\n    for (;;) {\n      var nl = str.indexOf(\"\\n\", at);\n      if (nl == -1) break;\n      ++out.line;\n      if (other) ++other.line;\n      at = nl + 1;\n    }\n    out.ch = (at ? 0 : out.ch) + (str.length - at);\n    if (other) other.ch = (at ? 0 : other.ch) + (str.length - at);\n    return out;\n  }\n\n  // Tracks collapsed markers and line widgets, in order to be able to\n  // accurately align the content of two editors.\n\n  var F_WIDGET = 1,\n    F_WIDGET_BELOW = 2,\n    F_MARKER = 4;\n  function TrackAlignable(cm) {\n    this.cm = cm;\n    this.alignable = [];\n    this.height = cm.doc.height;\n    var self = this;\n    cm.on(\"markerAdded\", function (_, marker) {\n      if (!marker.collapsed) return;\n      var found = marker.find(1);\n      if (found != null) self.set(found.line, F_MARKER);\n    });\n    cm.on(\"markerCleared\", function (_, marker, _min, max) {\n      if (max != null && marker.collapsed) self.check(max, F_MARKER, self.hasMarker);\n    });\n    cm.on(\"markerChanged\", this.signal.bind(this));\n    cm.on(\"lineWidgetAdded\", function (_, widget, lineNo) {\n      if (widget.mergeSpacer) return;\n      if (widget.above) self.set(lineNo - 1, F_WIDGET_BELOW);else self.set(lineNo, F_WIDGET);\n    });\n    cm.on(\"lineWidgetCleared\", function (_, widget, lineNo) {\n      if (widget.mergeSpacer) return;\n      if (widget.above) self.check(lineNo - 1, F_WIDGET_BELOW, self.hasWidgetBelow);else self.check(lineNo, F_WIDGET, self.hasWidget);\n    });\n    cm.on(\"lineWidgetChanged\", this.signal.bind(this));\n    cm.on(\"change\", function (_, change) {\n      var start = change.from.line,\n        nBefore = change.to.line - change.from.line;\n      var nAfter = change.text.length - 1,\n        end = start + nAfter;\n      if (nBefore || nAfter) self.map(start, nBefore, nAfter);\n      self.check(end, F_MARKER, self.hasMarker);\n      if (nBefore || nAfter) self.check(change.from.line, F_MARKER, self.hasMarker);\n    });\n    cm.on(\"viewportChange\", function () {\n      if (self.cm.doc.height != self.height) self.signal();\n    });\n  }\n  TrackAlignable.prototype = {\n    signal: function () {\n      CodeMirror.signal(this, \"realign\");\n      this.height = this.cm.doc.height;\n    },\n    set: function (n, flags) {\n      var pos = -1;\n      for (; pos < this.alignable.length; pos += 2) {\n        var diff = this.alignable[pos] - n;\n        if (diff == 0) {\n          if ((this.alignable[pos + 1] & flags) == flags) return;\n          this.alignable[pos + 1] |= flags;\n          this.signal();\n          return;\n        }\n        if (diff > 0) break;\n      }\n      this.signal();\n      this.alignable.splice(pos, 0, n, flags);\n    },\n    find: function (n) {\n      for (var i = 0; i < this.alignable.length; i += 2) if (this.alignable[i] == n) return i;\n      return -1;\n    },\n    check: function (n, flag, pred) {\n      var found = this.find(n);\n      if (found == -1 || !(this.alignable[found + 1] & flag)) return;\n      if (!pred.call(this, n)) {\n        this.signal();\n        var flags = this.alignable[found + 1] & ~flag;\n        if (flags) this.alignable[found + 1] = flags;else this.alignable.splice(found, 2);\n      }\n    },\n    hasMarker: function (n) {\n      var handle = this.cm.getLineHandle(n);\n      if (handle.markedSpans) for (var i = 0; i < handle.markedSpans.length; i++) if (handle.markedSpans[i].marker.collapsed && handle.markedSpans[i].to != null) return true;\n      return false;\n    },\n    hasWidget: function (n) {\n      var handle = this.cm.getLineHandle(n);\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++) if (!handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true;\n      return false;\n    },\n    hasWidgetBelow: function (n) {\n      if (n == this.cm.lastLine()) return false;\n      var handle = this.cm.getLineHandle(n + 1);\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++) if (handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true;\n      return false;\n    },\n    map: function (from, nBefore, nAfter) {\n      var diff = nAfter - nBefore,\n        to = from + nBefore,\n        widgetFrom = -1,\n        widgetTo = -1;\n      for (var i = 0; i < this.alignable.length; i += 2) {\n        var n = this.alignable[i];\n        if (n == from && this.alignable[i + 1] & F_WIDGET_BELOW) widgetFrom = i;\n        if (n == to && this.alignable[i + 1] & F_WIDGET_BELOW) widgetTo = i;\n        if (n <= from) continue;else if (n < to) this.alignable.splice(i--, 2);else this.alignable[i] += diff;\n      }\n      if (widgetFrom > -1) {\n        var flags = this.alignable[widgetFrom + 1];\n        if (flags == F_WIDGET_BELOW) this.alignable.splice(widgetFrom, 2);else this.alignable[widgetFrom + 1] = flags & ~F_WIDGET_BELOW;\n      }\n      if (widgetTo > -1 && nAfter) this.set(from + nAfter, F_WIDGET_BELOW);\n    }\n  };\n  function posMin(a, b) {\n    return (a.line - b.line || a.ch - b.ch) < 0 ? a : b;\n  }\n  function posMax(a, b) {\n    return (a.line - b.line || a.ch - b.ch) > 0 ? a : b;\n  }\n  function posEq(a, b) {\n    return a.line == b.line && a.ch == b.ch;\n  }\n  function findPrevDiff(chunks, start, isOrig) {\n    for (var i = chunks.length - 1; i >= 0; i--) {\n      var chunk = chunks[i];\n      var to = (isOrig ? chunk.origTo : chunk.editTo) - 1;\n      if (to < start) return to;\n    }\n  }\n  function findNextDiff(chunks, start, isOrig) {\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var from = isOrig ? chunk.origFrom : chunk.editFrom;\n      if (from > start) return from;\n    }\n  }\n  function goNearbyDiff(cm, dir) {\n    var found = null,\n      views = cm.state.diffViews,\n      line = cm.getCursor().line;\n    if (views) for (var i = 0; i < views.length; i++) {\n      var dv = views[i],\n        isOrig = cm == dv.orig;\n      ensureDiff(dv);\n      var pos = dir < 0 ? findPrevDiff(dv.chunks, line, isOrig) : findNextDiff(dv.chunks, line, isOrig);\n      if (pos != null && (found == null || (dir < 0 ? pos > found : pos < found))) found = pos;\n    }\n    if (found != null) cm.setCursor(found, 0);else return CodeMirror.Pass;\n  }\n  CodeMirror.commands.goNextDiff = function (cm) {\n    return goNearbyDiff(cm, 1);\n  };\n  CodeMirror.commands.goPrevDiff = function (cm) {\n    return goNearbyDiff(cm, -1);\n  };\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","Pos","svgNS","DiffView","mv","type","classes","chunk","start","end","insert","del","connect","prototype","constructor","init","pane","orig","options","edit","state","diffViews","push","copyObj","value","readOnly","allowEditingOriginals","trackAlignable","TrackAlignable","lockButton","title","phrase","setAttribute","classLocation","chunkClassLocation","Object","toString","call","diff","getDiff","asString","ignoreWhitespace","chunks","getChunks","diffOutOfDate","dealigned","needsScrollSync","showDifferences","registerEvents","otherDv","forceUpdate","registerUpdate","setScrollLock","registerScroll","setShowDifferences","val","ensureDiff","dv","getValue","signal","updating","from","to","marked","debounceChange","updatingFast","update","mode","svg","clear","copyButtons","clearMarks","updateMarks","DIFF_INSERT","DIFF_DELETE","alignChunks","makeConnections","syncScroll","setDealign","fast","set","clearTimeout","setTimeout","change","_cm","text","length","line","swapDoc","on","toOrig","lockScroll","editor","other","now","Date","scrollSetBy","scrollSetAt","sInfo","getScrollInfo","targetPos","top","halfScreen","clientHeight","midY","mid","lineAtHeight","around","chunkBoundariesAround","off","getOffsets","offOther","ratio","bot","botDist","mix","height","otherInfo","botDistOther","scrollTo","left","after","lastLine","heightAtLine","before","action","addClass","rmClass","removeClass","locs","i","removeLineClass","arr","mark","TextMarker","parent","vp","getViewport","operation","markChanges","lineNr","main","getLineHandle","addLineClass","marks","pos","clipPos","cls","markChunk","bfrom","Math","max","bto","min","chunkStart","pending","part","tp","str","DIFF_EQUAL","cleanFrom","startOfLineClean","moveOver","cleanTo","endOfLineClean","a","posMax","b","posMin","posEq","markText","className","w","gap","offsetWidth","attrs","offsetHeight","vpEdit","vpOrig","outerTop","wrap","getBoundingClientRect","sTopEdit","getScrollerElement","sTopOrig","ch","editFrom","editTo","origFrom","origTo","drawConnectorsForChunk","getMatchingOrigLine","editLine","editStart","origStart","alignableFor","cm","isOrig","tracker","firstLine","trackI","result","alignable","n","mergeAlignable","origAlignable","setIndex","rI","origI","chunkI","outer","nextR","nextO","rLine","oLine","record","splice","findAlignedLines","j","force","curOp","right","linesToAlign","aligners","scroll","offset","alignLines","ln","cmOffset","lines","maxOffset","padAbove","size","above","elt","document","createElement","style","minWidth","addLineWidget","mergeSpacer","handleMouseEvents","flip","topLpx","topRpx","tmp","botLpx","botRpx","curveTop","curveBot","appendChild","createElementNS","copy","editOriginals","topReverse","copyReverse","copyChunk","origEnd","editEnd","handler","revertChunk","replaceRange","getRange","MergeView","node","origLeft","origRight","hasLeft","hasRight","panes","self","leftPane","buildGap","editPane","rightPane","wrapElt","collapseIdentical","collapseIdenticalStretches","onResize","window","resizeInterval","setInterval","p","parentNode","body","clearInterval","lock","lockWrap","e","key","code","gapElts","revertButtons","target","srcElement","unshift","createSVGRect","rightOriginal","leftOriginal","rightChunks","leftChunks","obj","dmp","diff_match_patch","diff_main","test","startEdit","startOrig","startOff","cleanFromEdit","cleanFromOrig","endOff","cleanToEdit","cleanToOrig","next","charCodeAt","last","nInEdit","beforeE","afterE","beforeO","afterO","fromLocal","toLocal","collapseSingle","widget","inclusiveLeft","inclusiveRight","replacedWith","clearOnEnter","explicitlyCleared","collapseStretch","editors","unclearNearChunks","margin","l","onCollapse","tag","content","cssText","createTextNode","count","childNodes","removeChild","firstChild","arguments","prop","hasOwnProperty","out","at","nl","indexOf","F_WIDGET","F_WIDGET_BELOW","F_MARKER","doc","_","marker","collapsed","found","find","_min","check","hasMarker","bind","lineNo","hasWidgetBelow","hasWidget","nBefore","nAfter","map","flags","flag","pred","handle","markedSpans","widgets","widgetFrom","widgetTo","findPrevDiff","findNextDiff","goNearbyDiff","dir","views","getCursor","setCursor","Pass","commands","goNextDiff","goPrevDiff"],"sources":["C:/Users/PC/Desktop/vue/vue-code-collaborator/node_modules/codemirror-editor-vue3/node_modules/codemirror/addon/merge/merge.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// declare global: diff_match_patch, DIFF_INSERT, DIFF_DELETE, DIFF_EQUAL\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\")); // Note non-packaged dependency diff_match_patch\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"diff_match_patch\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var Pos = CodeMirror.Pos;\n  var svgNS = \"http://www.w3.org/2000/svg\";\n\n  function DiffView(mv, type) {\n    this.mv = mv;\n    this.type = type;\n    this.classes = type == \"left\"\n      ? {chunk: \"CodeMirror-merge-l-chunk\",\n         start: \"CodeMirror-merge-l-chunk-start\",\n         end: \"CodeMirror-merge-l-chunk-end\",\n         insert: \"CodeMirror-merge-l-inserted\",\n         del: \"CodeMirror-merge-l-deleted\",\n         connect: \"CodeMirror-merge-l-connect\"}\n      : {chunk: \"CodeMirror-merge-r-chunk\",\n         start: \"CodeMirror-merge-r-chunk-start\",\n         end: \"CodeMirror-merge-r-chunk-end\",\n         insert: \"CodeMirror-merge-r-inserted\",\n         del: \"CodeMirror-merge-r-deleted\",\n         connect: \"CodeMirror-merge-r-connect\"};\n  }\n\n  DiffView.prototype = {\n    constructor: DiffView,\n    init: function(pane, orig, options) {\n      this.edit = this.mv.edit;\n      ;(this.edit.state.diffViews || (this.edit.state.diffViews = [])).push(this);\n      this.orig = CodeMirror(pane, copyObj({value: orig, readOnly: !this.mv.options.allowEditingOriginals}, copyObj(options)));\n      if (this.mv.options.connect == \"align\") {\n        if (!this.edit.state.trackAlignable) this.edit.state.trackAlignable = new TrackAlignable(this.edit)\n        this.orig.state.trackAlignable = new TrackAlignable(this.orig)\n      }\n      this.lockButton.title = this.edit.phrase(\"Toggle locked scrolling\");\n      this.lockButton.setAttribute(\"aria-label\", this.lockButton.title);\n\n      this.orig.state.diffViews = [this];\n      var classLocation = options.chunkClassLocation || \"background\";\n      if (Object.prototype.toString.call(classLocation) != \"[object Array]\") classLocation = [classLocation]\n      this.classes.classLocation = classLocation\n\n      this.diff = getDiff(asString(orig), asString(options.value), this.mv.options.ignoreWhitespace);\n      this.chunks = getChunks(this.diff);\n      this.diffOutOfDate = this.dealigned = false;\n      this.needsScrollSync = null\n\n      this.showDifferences = options.showDifferences !== false;\n    },\n    registerEvents: function(otherDv) {\n      this.forceUpdate = registerUpdate(this);\n      setScrollLock(this, true, false);\n      registerScroll(this, otherDv);\n    },\n    setShowDifferences: function(val) {\n      val = val !== false;\n      if (val != this.showDifferences) {\n        this.showDifferences = val;\n        this.forceUpdate(\"full\");\n      }\n    }\n  };\n\n  function ensureDiff(dv) {\n    if (dv.diffOutOfDate) {\n      dv.diff = getDiff(dv.orig.getValue(), dv.edit.getValue(), dv.mv.options.ignoreWhitespace);\n      dv.chunks = getChunks(dv.diff);\n      dv.diffOutOfDate = false;\n      CodeMirror.signal(dv.edit, \"updateDiff\", dv.diff);\n    }\n  }\n\n  var updating = false;\n  function registerUpdate(dv) {\n    var edit = {from: 0, to: 0, marked: []};\n    var orig = {from: 0, to: 0, marked: []};\n    var debounceChange, updatingFast = false;\n    function update(mode) {\n      updating = true;\n      updatingFast = false;\n      if (mode == \"full\") {\n        if (dv.svg) clear(dv.svg);\n        if (dv.copyButtons) clear(dv.copyButtons);\n        clearMarks(dv.edit, edit.marked, dv.classes);\n        clearMarks(dv.orig, orig.marked, dv.classes);\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      ensureDiff(dv);\n      if (dv.showDifferences) {\n        updateMarks(dv.edit, dv.diff, edit, DIFF_INSERT, dv.classes);\n        updateMarks(dv.orig, dv.diff, orig, DIFF_DELETE, dv.classes);\n      }\n\n      if (dv.mv.options.connect == \"align\")\n        alignChunks(dv);\n      makeConnections(dv);\n      if (dv.needsScrollSync != null) syncScroll(dv, dv.needsScrollSync)\n\n      updating = false;\n    }\n    function setDealign(fast) {\n      if (updating) return;\n      dv.dealigned = true;\n      set(fast);\n    }\n    function set(fast) {\n      if (updating || updatingFast) return;\n      clearTimeout(debounceChange);\n      if (fast === true) updatingFast = true;\n      debounceChange = setTimeout(update, fast === true ? 20 : 250);\n    }\n    function change(_cm, change) {\n      if (!dv.diffOutOfDate) {\n        dv.diffOutOfDate = true;\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      // Update faster when a line was added/removed\n      setDealign(change.text.length - 1 != change.to.line - change.from.line);\n    }\n    function swapDoc() {\n      dv.diffOutOfDate = true;\n      dv.dealigned = true;\n      update(\"full\");\n    }\n    dv.edit.on(\"change\", change);\n    dv.orig.on(\"change\", change);\n    dv.edit.on(\"swapDoc\", swapDoc);\n    dv.orig.on(\"swapDoc\", swapDoc);\n    if (dv.mv.options.connect == \"align\") {\n      CodeMirror.on(dv.edit.state.trackAlignable, \"realign\", setDealign)\n      CodeMirror.on(dv.orig.state.trackAlignable, \"realign\", setDealign)\n    }\n    dv.edit.on(\"viewportChange\", function() { set(false); });\n    dv.orig.on(\"viewportChange\", function() { set(false); });\n    update();\n    return update;\n  }\n\n  function registerScroll(dv, otherDv) {\n    dv.edit.on(\"scroll\", function() {\n      syncScroll(dv, true) && makeConnections(dv);\n    });\n    dv.orig.on(\"scroll\", function() {\n      syncScroll(dv, false) && makeConnections(dv);\n      if (otherDv) syncScroll(otherDv, true) && makeConnections(otherDv);\n    });\n  }\n\n  function syncScroll(dv, toOrig) {\n    // Change handler will do a refresh after a timeout when diff is out of date\n    if (dv.diffOutOfDate) {\n      if (dv.lockScroll && dv.needsScrollSync == null) dv.needsScrollSync = toOrig\n      return false\n    }\n    dv.needsScrollSync = null\n    if (!dv.lockScroll) return true;\n    var editor, other, now = +new Date;\n    if (toOrig) { editor = dv.edit; other = dv.orig; }\n    else { editor = dv.orig; other = dv.edit; }\n    // Don't take action if the position of this editor was recently set\n    // (to prevent feedback loops)\n    if (editor.state.scrollSetBy == dv && (editor.state.scrollSetAt || 0) + 250 > now) return false;\n\n    var sInfo = editor.getScrollInfo();\n    if (dv.mv.options.connect == \"align\") {\n      targetPos = sInfo.top;\n    } else {\n      var halfScreen = .5 * sInfo.clientHeight, midY = sInfo.top + halfScreen;\n      var mid = editor.lineAtHeight(midY, \"local\");\n      var around = chunkBoundariesAround(dv.chunks, mid, toOrig);\n      var off = getOffsets(editor, toOrig ? around.edit : around.orig);\n      var offOther = getOffsets(other, toOrig ? around.orig : around.edit);\n      var ratio = (midY - off.top) / (off.bot - off.top);\n      var targetPos = (offOther.top - halfScreen) + ratio * (offOther.bot - offOther.top);\n\n      var botDist, mix;\n      // Some careful tweaking to make sure no space is left out of view\n      // when scrolling to top or bottom.\n      if (targetPos > sInfo.top && (mix = sInfo.top / halfScreen) < 1) {\n        targetPos = targetPos * mix + sInfo.top * (1 - mix);\n      } else if ((botDist = sInfo.height - sInfo.clientHeight - sInfo.top) < halfScreen) {\n        var otherInfo = other.getScrollInfo();\n        var botDistOther = otherInfo.height - otherInfo.clientHeight - targetPos;\n        if (botDistOther > botDist && (mix = botDist / halfScreen) < 1)\n          targetPos = targetPos * mix + (otherInfo.height - otherInfo.clientHeight - botDist) * (1 - mix);\n      }\n    }\n\n    other.scrollTo(sInfo.left, targetPos);\n    other.state.scrollSetAt = now;\n    other.state.scrollSetBy = dv;\n    return true;\n  }\n\n  function getOffsets(editor, around) {\n    var bot = around.after;\n    if (bot == null) bot = editor.lastLine() + 1;\n    return {top: editor.heightAtLine(around.before || 0, \"local\"),\n            bot: editor.heightAtLine(bot, \"local\")};\n  }\n\n  function setScrollLock(dv, val, action) {\n    dv.lockScroll = val;\n    if (val && action != false) syncScroll(dv, DIFF_INSERT) && makeConnections(dv);\n    (val ? CodeMirror.addClass : CodeMirror.rmClass)(dv.lockButton, \"CodeMirror-merge-scrolllock-enabled\");\n  }\n\n  // Updating the marks for editor content\n\n  function removeClass(editor, line, classes) {\n    var locs = classes.classLocation\n    for (var i = 0; i < locs.length; i++) {\n      editor.removeLineClass(line, locs[i], classes.chunk);\n      editor.removeLineClass(line, locs[i], classes.start);\n      editor.removeLineClass(line, locs[i], classes.end);\n    }\n  }\n\n  function clearMarks(editor, arr, classes) {\n    for (var i = 0; i < arr.length; ++i) {\n      var mark = arr[i];\n      if (mark instanceof CodeMirror.TextMarker)\n        mark.clear();\n      else if (mark.parent)\n        removeClass(editor, mark, classes);\n    }\n    arr.length = 0;\n  }\n\n  // FIXME maybe add a margin around viewport to prevent too many updates\n  function updateMarks(editor, diff, state, type, classes) {\n    var vp = editor.getViewport();\n    editor.operation(function() {\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        clearMarks(editor, state.marked, classes);\n        markChanges(editor, diff, type, state.marked, vp.from, vp.to, classes);\n        state.from = vp.from; state.to = vp.to;\n      } else {\n        if (vp.from < state.from) {\n          markChanges(editor, diff, type, state.marked, vp.from, state.from, classes);\n          state.from = vp.from;\n        }\n        if (vp.to > state.to) {\n          markChanges(editor, diff, type, state.marked, state.to, vp.to, classes);\n          state.to = vp.to;\n        }\n      }\n    });\n  }\n\n  function addClass(editor, lineNr, classes, main, start, end) {\n    var locs = classes.classLocation, line = editor.getLineHandle(lineNr);\n    for (var i = 0; i < locs.length; i++) {\n      if (main) editor.addLineClass(line, locs[i], classes.chunk);\n      if (start) editor.addLineClass(line, locs[i], classes.start);\n      if (end) editor.addLineClass(line, locs[i], classes.end);\n    }\n    return line;\n  }\n\n  function markChanges(editor, diff, type, marks, from, to, classes) {\n    var pos = Pos(0, 0);\n    var top = Pos(from, 0), bot = editor.clipPos(Pos(to - 1));\n    var cls = type == DIFF_DELETE ? classes.del : classes.insert;\n    function markChunk(start, end) {\n      var bfrom = Math.max(from, start), bto = Math.min(to, end);\n      for (var i = bfrom; i < bto; ++i)\n        marks.push(addClass(editor, i, classes, true, i == start, i == end - 1));\n      // When the chunk is empty, make sure a horizontal line shows up\n      if (start == end && bfrom == end && bto == end) {\n        if (bfrom)\n          marks.push(addClass(editor, bfrom - 1, classes, false, false, true));\n        else\n          marks.push(addClass(editor, bfrom, classes, false, true, false));\n      }\n    }\n\n    var chunkStart = 0, pending = false;\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0], str = part[1];\n      if (tp == DIFF_EQUAL) {\n        var cleanFrom = pos.line + (startOfLineClean(diff, i) ? 0 : 1);\n        moveOver(pos, str);\n        var cleanTo = pos.line + (endOfLineClean(diff, i) ? 1 : 0);\n        if (cleanTo > cleanFrom) {\n          if (pending) { markChunk(chunkStart, cleanFrom); pending = false }\n          chunkStart = cleanTo;\n        }\n      } else {\n        pending = true\n        if (tp == type) {\n          var end = moveOver(pos, str, true);\n          var a = posMax(top, pos), b = posMin(bot, end);\n          if (!posEq(a, b))\n            marks.push(editor.markText(a, b, {className: cls}));\n          pos = end;\n        }\n      }\n    }\n    if (pending) markChunk(chunkStart, pos.line + 1);\n  }\n\n  // Updating the gap between editor and original\n\n  function makeConnections(dv) {\n    if (!dv.showDifferences) return;\n\n    if (dv.svg) {\n      clear(dv.svg);\n      var w = dv.gap.offsetWidth;\n      attrs(dv.svg, \"width\", w, \"height\", dv.gap.offsetHeight);\n    }\n    if (dv.copyButtons) clear(dv.copyButtons);\n\n    var vpEdit = dv.edit.getViewport(), vpOrig = dv.orig.getViewport();\n    var outerTop = dv.mv.wrap.getBoundingClientRect().top\n    var sTopEdit = outerTop - dv.edit.getScrollerElement().getBoundingClientRect().top + dv.edit.getScrollInfo().top\n    var sTopOrig = outerTop - dv.orig.getScrollerElement().getBoundingClientRect().top + dv.orig.getScrollInfo().top;\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var ch = dv.chunks[i];\n      if (ch.editFrom <= vpEdit.to && ch.editTo >= vpEdit.from &&\n          ch.origFrom <= vpOrig.to && ch.origTo >= vpOrig.from)\n        drawConnectorsForChunk(dv, ch, sTopOrig, sTopEdit, w);\n    }\n  }\n\n  function getMatchingOrigLine(editLine, chunks) {\n    var editStart = 0, origStart = 0;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      if (chunk.editTo > editLine && chunk.editFrom <= editLine) return null;\n      if (chunk.editFrom > editLine) break;\n      editStart = chunk.editTo;\n      origStart = chunk.origTo;\n    }\n    return origStart + (editLine - editStart);\n  }\n\n  // Combines information about chunks and widgets/markers to return\n  // an array of lines, in a single editor, that probably need to be\n  // aligned with their counterparts in the editor next to it.\n  function alignableFor(cm, chunks, isOrig) {\n    var tracker = cm.state.trackAlignable\n    var start = cm.firstLine(), trackI = 0\n    var result = []\n    for (var i = 0;; i++) {\n      var chunk = chunks[i]\n      var chunkStart = !chunk ? 1e9 : isOrig ? chunk.origFrom : chunk.editFrom\n      for (; trackI < tracker.alignable.length; trackI += 2) {\n        var n = tracker.alignable[trackI] + 1\n        if (n <= start) continue\n        if (n <= chunkStart) result.push(n)\n        else break\n      }\n      if (!chunk) break\n      result.push(start = isOrig ? chunk.origTo : chunk.editTo)\n    }\n    return result\n  }\n\n  // Given information about alignable lines in two editors, fill in\n  // the result (an array of three-element arrays) to reflect the\n  // lines that need to be aligned with each other.\n  function mergeAlignable(result, origAlignable, chunks, setIndex) {\n    var rI = 0, origI = 0, chunkI = 0, diff = 0\n    outer: for (;; rI++) {\n      var nextR = result[rI], nextO = origAlignable[origI]\n      if (!nextR && nextO == null) break\n\n      var rLine = nextR ? nextR[0] : 1e9, oLine = nextO == null ? 1e9 : nextO\n      while (chunkI < chunks.length) {\n        var chunk = chunks[chunkI]\n        if (chunk.origFrom <= oLine && chunk.origTo > oLine) {\n          origI++\n          rI--\n          continue outer;\n        }\n        if (chunk.editTo > rLine) {\n          if (chunk.editFrom <= rLine) continue outer;\n          break\n        }\n        diff += (chunk.origTo - chunk.origFrom) - (chunk.editTo - chunk.editFrom)\n        chunkI++\n      }\n      if (rLine == oLine - diff) {\n        nextR[setIndex] = oLine\n        origI++\n      } else if (rLine < oLine - diff) {\n        nextR[setIndex] = rLine + diff\n      } else {\n        var record = [oLine - diff, null, null]\n        record[setIndex] = oLine\n        result.splice(rI, 0, record)\n        origI++\n      }\n    }\n  }\n\n  function findAlignedLines(dv, other) {\n    var alignable = alignableFor(dv.edit, dv.chunks, false), result = []\n    if (other) for (var i = 0, j = 0; i < other.chunks.length; i++) {\n      var n = other.chunks[i].editTo\n      while (j < alignable.length && alignable[j] < n) j++\n      if (j == alignable.length || alignable[j] != n) alignable.splice(j++, 0, n)\n    }\n    for (var i = 0; i < alignable.length; i++)\n      result.push([alignable[i], null, null])\n\n    mergeAlignable(result, alignableFor(dv.orig, dv.chunks, true), dv.chunks, 1)\n    if (other)\n      mergeAlignable(result, alignableFor(other.orig, other.chunks, true), other.chunks, 2)\n\n    return result\n  }\n\n  function alignChunks(dv, force) {\n    if (!dv.dealigned && !force) return;\n    if (!dv.orig.curOp) return dv.orig.operation(function() {\n      alignChunks(dv, force);\n    });\n\n    dv.dealigned = false;\n    var other = dv.mv.left == dv ? dv.mv.right : dv.mv.left;\n    if (other) {\n      ensureDiff(other);\n      other.dealigned = false;\n    }\n    var linesToAlign = findAlignedLines(dv, other);\n\n    // Clear old aligners\n    var aligners = dv.mv.aligners;\n    for (var i = 0; i < aligners.length; i++)\n      aligners[i].clear();\n    aligners.length = 0;\n\n    var cm = [dv.edit, dv.orig], scroll = [], offset = []\n    if (other) cm.push(other.orig);\n    for (var i = 0; i < cm.length; i++) {\n      scroll.push(cm[i].getScrollInfo().top);\n      offset.push(-cm[i].getScrollerElement().getBoundingClientRect().top)\n    }\n\n    if (offset[0] != offset[1] || cm.length == 3 && offset[1] != offset[2])\n      alignLines(cm, offset, [0, 0, 0], aligners)\n    for (var ln = 0; ln < linesToAlign.length; ln++)\n      alignLines(cm, offset, linesToAlign[ln], aligners);\n\n    for (var i = 0; i < cm.length; i++)\n      cm[i].scrollTo(null, scroll[i]);\n  }\n\n  function alignLines(cm, cmOffset, lines, aligners) {\n    var maxOffset = -1e8, offset = [];\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var off = cm[i].heightAtLine(lines[i], \"local\") - cmOffset[i];\n      offset[i] = off;\n      maxOffset = Math.max(maxOffset, off);\n    }\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var diff = maxOffset - offset[i];\n      if (diff > 1)\n        aligners.push(padAbove(cm[i], lines[i], diff));\n    }\n  }\n\n  function padAbove(cm, line, size) {\n    var above = true;\n    if (line > cm.lastLine()) {\n      line--;\n      above = false;\n    }\n    var elt = document.createElement(\"div\");\n    elt.className = \"CodeMirror-merge-spacer\";\n    elt.style.height = size + \"px\"; elt.style.minWidth = \"1px\";\n    return cm.addLineWidget(line, elt, {height: size, above: above, mergeSpacer: true, handleMouseEvents: true});\n  }\n\n  function drawConnectorsForChunk(dv, chunk, sTopOrig, sTopEdit, w) {\n    var flip = dv.type == \"left\";\n    var top = dv.orig.heightAtLine(chunk.origFrom, \"local\", true) - sTopOrig;\n    if (dv.svg) {\n      var topLpx = top;\n      var topRpx = dv.edit.heightAtLine(chunk.editFrom, \"local\", true) - sTopEdit;\n      if (flip) { var tmp = topLpx; topLpx = topRpx; topRpx = tmp; }\n      var botLpx = dv.orig.heightAtLine(chunk.origTo, \"local\", true) - sTopOrig;\n      var botRpx = dv.edit.heightAtLine(chunk.editTo, \"local\", true) - sTopEdit;\n      if (flip) { var tmp = botLpx; botLpx = botRpx; botRpx = tmp; }\n      var curveTop = \" C \" + w/2 + \" \" + topRpx + \" \" + w/2 + \" \" + topLpx + \" \" + (w + 2) + \" \" + topLpx;\n      var curveBot = \" C \" + w/2 + \" \" + botLpx + \" \" + w/2 + \" \" + botRpx + \" -1 \" + botRpx;\n      attrs(dv.svg.appendChild(document.createElementNS(svgNS, \"path\")),\n            \"d\", \"M -1 \" + topRpx + curveTop + \" L \" + (w + 2) + \" \" + botLpx + curveBot + \" z\",\n            \"class\", dv.classes.connect);\n    }\n    if (dv.copyButtons) {\n      var copy = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"left\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                \"CodeMirror-merge-copy\"));\n      var editOriginals = dv.mv.options.allowEditingOriginals;\n      copy.title = dv.edit.phrase(editOriginals ? \"Push to left\" : \"Revert chunk\");\n      copy.chunk = chunk;\n      copy.style.top = (chunk.origTo > chunk.origFrom ? top : dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit) + \"px\";\n      copy.setAttribute(\"role\", \"button\");\n      copy.setAttribute(\"tabindex\", \"0\");\n      copy.setAttribute(\"aria-label\", copy.title);\n\n      if (editOriginals) {\n        var topReverse = dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit;\n        var copyReverse = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"right\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                         \"CodeMirror-merge-copy-reverse\"));\n        copyReverse.title = \"Push to right\";\n        copyReverse.chunk = {editFrom: chunk.origFrom, editTo: chunk.origTo,\n                             origFrom: chunk.editFrom, origTo: chunk.editTo};\n        copyReverse.style.top = topReverse + \"px\";\n        dv.type == \"right\" ? copyReverse.style.left = \"2px\" : copyReverse.style.right = \"2px\";\n        copyReverse.setAttribute(\"role\", \"button\");\n        copyReverse.setAttribute(\"tabindex\", \"0\");\n        copyReverse.setAttribute(\"aria-label\", copyReverse.title);\n      }\n    }\n  }\n\n  function copyChunk(dv, to, from, chunk) {\n    if (dv.diffOutOfDate) return;\n    var origStart = chunk.origTo > from.lastLine() ? Pos(chunk.origFrom - 1) : Pos(chunk.origFrom, 0)\n    var origEnd = Pos(chunk.origTo, 0)\n    var editStart = chunk.editTo > to.lastLine() ? Pos(chunk.editFrom - 1) : Pos(chunk.editFrom, 0)\n    var editEnd = Pos(chunk.editTo, 0)\n    var handler = dv.mv.options.revertChunk\n    if (handler)\n      handler(dv.mv, from, origStart, origEnd, to, editStart, editEnd)\n    else\n      to.replaceRange(from.getRange(origStart, origEnd), editStart, editEnd)\n  }\n\n  // Merge view, containing 0, 1, or 2 diff views.\n\n  var MergeView = CodeMirror.MergeView = function(node, options) {\n    if (!(this instanceof MergeView)) return new MergeView(node, options);\n\n    this.options = options;\n    var origLeft = options.origLeft, origRight = options.origRight == null ? options.orig : options.origRight;\n\n    var hasLeft = origLeft != null, hasRight = origRight != null;\n    var panes = 1 + (hasLeft ? 1 : 0) + (hasRight ? 1 : 0);\n    var wrap = [], left = this.left = null, right = this.right = null;\n    var self = this;\n\n    if (hasLeft) {\n      left = this.left = new DiffView(this, \"left\");\n      var leftPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-left\");\n      wrap.push(leftPane);\n      wrap.push(buildGap(left));\n    }\n\n    var editPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-editor\");\n    wrap.push(editPane);\n\n    if (hasRight) {\n      right = this.right = new DiffView(this, \"right\");\n      wrap.push(buildGap(right));\n      var rightPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-right\");\n      wrap.push(rightPane);\n    }\n\n    (hasRight ? rightPane : editPane).className += \" CodeMirror-merge-pane-rightmost\";\n\n    wrap.push(elt(\"div\", null, null, \"height: 0; clear: both;\"));\n\n    var wrapElt = this.wrap = node.appendChild(elt(\"div\", wrap, \"CodeMirror-merge CodeMirror-merge-\" + panes + \"pane\"));\n    this.edit = CodeMirror(editPane, copyObj(options));\n\n    if (left) left.init(leftPane, origLeft, options);\n    if (right) right.init(rightPane, origRight, options);\n    if (options.collapseIdentical)\n      this.editor().operation(function() {\n        collapseIdenticalStretches(self, options.collapseIdentical);\n      });\n    if (options.connect == \"align\") {\n      this.aligners = [];\n      alignChunks(this.left || this.right, true);\n    }\n    if (left) left.registerEvents(right)\n    if (right) right.registerEvents(left)\n\n\n    var onResize = function() {\n      if (left) makeConnections(left);\n      if (right) makeConnections(right);\n    };\n    CodeMirror.on(window, \"resize\", onResize);\n    var resizeInterval = setInterval(function() {\n      for (var p = wrapElt.parentNode; p && p != document.body; p = p.parentNode) {}\n      if (!p) { clearInterval(resizeInterval); CodeMirror.off(window, \"resize\", onResize); }\n    }, 5000);\n  };\n\n  function buildGap(dv) {\n    var lock = dv.lockButton = elt(\"div\", null, \"CodeMirror-merge-scrolllock\");\n    lock.setAttribute(\"role\", \"button\");\n    lock.setAttribute(\"tabindex\", \"0\");\n    var lockWrap = elt(\"div\", [lock], \"CodeMirror-merge-scrolllock-wrap\");\n    CodeMirror.on(lock, \"click\", function() { setScrollLock(dv, !dv.lockScroll); });\n    CodeMirror.on(lock, \"keyup\", function(e) { (e.key === \"Enter\" || e.code === \"Space\") && setScrollLock(dv, !dv.lockScroll); });\n    var gapElts = [lockWrap];\n    if (dv.mv.options.revertButtons !== false) {\n      dv.copyButtons = elt(\"div\", null, \"CodeMirror-merge-copybuttons-\" + dv.type);\n      var copyButtons = function(e) {\n        var node = e.target || e.srcElement;\n        if (!node.chunk) return;\n        if (node.className == \"CodeMirror-merge-copy-reverse\") {\n          copyChunk(dv, dv.orig, dv.edit, node.chunk);\n          return;\n        }\n        copyChunk(dv, dv.edit, dv.orig, node.chunk);\n      }\n      CodeMirror.on(dv.copyButtons, \"click\", copyButtons);\n      CodeMirror.on(dv.copyButtons, \"keyup\", function(e) { (e.key === \"Enter\" || e.code === \"Space\") && copyButtons(e); });\n      gapElts.unshift(dv.copyButtons);\n    }\n    if (dv.mv.options.connect != \"align\") {\n      var svg = document.createElementNS && document.createElementNS(svgNS, \"svg\");\n      if (svg && !svg.createSVGRect) svg = null;\n      dv.svg = svg;\n      if (svg) gapElts.push(svg);\n    }\n\n    return dv.gap = elt(\"div\", gapElts, \"CodeMirror-merge-gap\");\n  }\n\n  MergeView.prototype = {\n    constructor: MergeView,\n    editor: function() { return this.edit; },\n    rightOriginal: function() { return this.right && this.right.orig; },\n    leftOriginal: function() { return this.left && this.left.orig; },\n    setShowDifferences: function(val) {\n      if (this.right) this.right.setShowDifferences(val);\n      if (this.left) this.left.setShowDifferences(val);\n    },\n    rightChunks: function() {\n      if (this.right) { ensureDiff(this.right); return this.right.chunks; }\n    },\n    leftChunks: function() {\n      if (this.left) { ensureDiff(this.left); return this.left.chunks; }\n    }\n  };\n\n  function asString(obj) {\n    if (typeof obj == \"string\") return obj;\n    else return obj.getValue();\n  }\n\n  // Operations on diffs\n  var dmp;\n  function getDiff(a, b, ignoreWhitespace) {\n    if (!dmp) dmp = new diff_match_patch();\n\n    var diff = dmp.diff_main(a, b);\n    // The library sometimes leaves in empty parts, which confuse the algorithm\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i];\n      if (ignoreWhitespace ? !/[^ \\t]/.test(part[1]) : !part[1]) {\n        diff.splice(i--, 1);\n      } else if (i && diff[i - 1][0] == part[0]) {\n        diff.splice(i--, 1);\n        diff[i][1] += part[1];\n      }\n    }\n    return diff;\n  }\n\n  function getChunks(diff) {\n    var chunks = [];\n    if (!diff.length) return chunks;\n    var startEdit = 0, startOrig = 0;\n    var edit = Pos(0, 0), orig = Pos(0, 0);\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0];\n      if (tp == DIFF_EQUAL) {\n        var startOff = !startOfLineClean(diff, i) || edit.line < startEdit || orig.line < startOrig ? 1 : 0;\n        var cleanFromEdit = edit.line + startOff, cleanFromOrig = orig.line + startOff;\n        moveOver(edit, part[1], null, orig);\n        var endOff = endOfLineClean(diff, i) ? 1 : 0;\n        var cleanToEdit = edit.line + endOff, cleanToOrig = orig.line + endOff;\n        if (cleanToEdit > cleanFromEdit) {\n          if (i) chunks.push({origFrom: startOrig, origTo: cleanFromOrig,\n                              editFrom: startEdit, editTo: cleanFromEdit});\n          startEdit = cleanToEdit; startOrig = cleanToOrig;\n        }\n      } else {\n        moveOver(tp == DIFF_INSERT ? edit : orig, part[1]);\n      }\n    }\n    if (startEdit <= edit.line || startOrig <= orig.line)\n      chunks.push({origFrom: startOrig, origTo: orig.line + 1,\n                   editFrom: startEdit, editTo: edit.line + 1});\n    return chunks;\n  }\n\n  function endOfLineClean(diff, i) {\n    if (i == diff.length - 1) return true;\n    var next = diff[i + 1][1];\n    if ((next.length == 1 && i < diff.length - 2) || next.charCodeAt(0) != 10) return false;\n    if (i == diff.length - 2) return true;\n    next = diff[i + 2][1];\n    return (next.length > 1 || i == diff.length - 3) && next.charCodeAt(0) == 10;\n  }\n\n  function startOfLineClean(diff, i) {\n    if (i == 0) return true;\n    var last = diff[i - 1][1];\n    if (last.charCodeAt(last.length - 1) != 10) return false;\n    if (i == 1) return true;\n    last = diff[i - 2][1];\n    return last.charCodeAt(last.length - 1) == 10;\n  }\n\n  function chunkBoundariesAround(chunks, n, nInEdit) {\n    var beforeE, afterE, beforeO, afterO;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var fromLocal = nInEdit ? chunk.editFrom : chunk.origFrom;\n      var toLocal = nInEdit ? chunk.editTo : chunk.origTo;\n      if (afterE == null) {\n        if (fromLocal > n) { afterE = chunk.editFrom; afterO = chunk.origFrom; }\n        else if (toLocal > n) { afterE = chunk.editTo; afterO = chunk.origTo; }\n      }\n      if (toLocal <= n) { beforeE = chunk.editTo; beforeO = chunk.origTo; }\n      else if (fromLocal <= n) { beforeE = chunk.editFrom; beforeO = chunk.origFrom; }\n    }\n    return {edit: {before: beforeE, after: afterE}, orig: {before: beforeO, after: afterO}};\n  }\n\n  function collapseSingle(cm, from, to) {\n    cm.addLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    var widget = document.createElement(\"span\");\n    widget.className = \"CodeMirror-merge-collapsed-widget\";\n    widget.title = cm.phrase(\"Identical text collapsed. Click to expand.\");\n    var mark = cm.markText(Pos(from, 0), Pos(to - 1), {\n      inclusiveLeft: true,\n      inclusiveRight: true,\n      replacedWith: widget,\n      clearOnEnter: true\n    });\n    function clear() {\n      mark.clear();\n      cm.removeLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    }\n    if (mark.explicitlyCleared) clear();\n    CodeMirror.on(widget, \"click\", clear);\n    mark.on(\"clear\", clear);\n    CodeMirror.on(widget, \"click\", clear);\n    return {mark: mark, clear: clear};\n  }\n\n  function collapseStretch(size, editors) {\n    var marks = [];\n    function clear() {\n      for (var i = 0; i < marks.length; i++) marks[i].clear();\n    }\n    for (var i = 0; i < editors.length; i++) {\n      var editor = editors[i];\n      var mark = collapseSingle(editor.cm, editor.line, editor.line + size);\n      marks.push(mark);\n      mark.mark.on(\"clear\", clear);\n    }\n    return marks[0].mark;\n  }\n\n  function unclearNearChunks(dv, margin, off, clear) {\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var chunk = dv.chunks[i];\n      for (var l = chunk.editFrom - margin; l < chunk.editTo + margin; l++) {\n        var pos = l + off;\n        if (pos >= 0 && pos < clear.length) clear[pos] = false;\n      }\n    }\n  }\n\n  function collapseIdenticalStretches(mv, margin) {\n    if (typeof margin != \"number\") margin = 2;\n    var clear = [], edit = mv.editor(), off = edit.firstLine();\n    for (var l = off, e = edit.lastLine(); l <= e; l++) clear.push(true);\n    if (mv.left) unclearNearChunks(mv.left, margin, off, clear);\n    if (mv.right) unclearNearChunks(mv.right, margin, off, clear);\n\n    for (var i = 0; i < clear.length; i++) {\n      if (clear[i]) {\n        var line = i + off;\n        for (var size = 1; i < clear.length - 1 && clear[i + 1]; i++, size++) {}\n        if (size > margin) {\n          var editors = [{line: line, cm: edit}];\n          if (mv.left) editors.push({line: getMatchingOrigLine(line, mv.left.chunks), cm: mv.left.orig});\n          if (mv.right) editors.push({line: getMatchingOrigLine(line, mv.right.chunks), cm: mv.right.orig});\n          var mark = collapseStretch(size, editors);\n          if (mv.options.onCollapse) mv.options.onCollapse(mv, line, size, mark);\n        }\n      }\n    }\n  }\n\n  // General utilities\n\n  function elt(tag, content, className, style) {\n    var e = document.createElement(tag);\n    if (className) e.className = className;\n    if (style) e.style.cssText = style;\n    if (typeof content == \"string\") e.appendChild(document.createTextNode(content));\n    else if (content) for (var i = 0; i < content.length; ++i) e.appendChild(content[i]);\n    return e;\n  }\n\n  function clear(node) {\n    for (var count = node.childNodes.length; count > 0; --count)\n      node.removeChild(node.firstChild);\n  }\n\n  function attrs(elt) {\n    for (var i = 1; i < arguments.length; i += 2)\n      elt.setAttribute(arguments[i], arguments[i+1]);\n  }\n\n  function copyObj(obj, target) {\n    if (!target) target = {};\n    for (var prop in obj) if (obj.hasOwnProperty(prop)) target[prop] = obj[prop];\n    return target;\n  }\n\n  function moveOver(pos, str, copy, other) {\n    var out = copy ? Pos(pos.line, pos.ch) : pos, at = 0;\n    for (;;) {\n      var nl = str.indexOf(\"\\n\", at);\n      if (nl == -1) break;\n      ++out.line;\n      if (other) ++other.line;\n      at = nl + 1;\n    }\n    out.ch = (at ? 0 : out.ch) + (str.length - at);\n    if (other) other.ch = (at ? 0 : other.ch) + (str.length - at);\n    return out;\n  }\n\n  // Tracks collapsed markers and line widgets, in order to be able to\n  // accurately align the content of two editors.\n\n  var F_WIDGET = 1, F_WIDGET_BELOW = 2, F_MARKER = 4\n\n  function TrackAlignable(cm) {\n    this.cm = cm\n    this.alignable = []\n    this.height = cm.doc.height\n    var self = this\n    cm.on(\"markerAdded\", function(_, marker) {\n      if (!marker.collapsed) return\n      var found = marker.find(1)\n      if (found != null) self.set(found.line, F_MARKER)\n    })\n    cm.on(\"markerCleared\", function(_, marker, _min, max) {\n      if (max != null && marker.collapsed)\n        self.check(max, F_MARKER, self.hasMarker)\n    })\n    cm.on(\"markerChanged\", this.signal.bind(this))\n    cm.on(\"lineWidgetAdded\", function(_, widget, lineNo) {\n      if (widget.mergeSpacer) return\n      if (widget.above) self.set(lineNo - 1, F_WIDGET_BELOW)\n      else self.set(lineNo, F_WIDGET)\n    })\n    cm.on(\"lineWidgetCleared\", function(_, widget, lineNo) {\n      if (widget.mergeSpacer) return\n      if (widget.above) self.check(lineNo - 1, F_WIDGET_BELOW, self.hasWidgetBelow)\n      else self.check(lineNo, F_WIDGET, self.hasWidget)\n    })\n    cm.on(\"lineWidgetChanged\", this.signal.bind(this))\n    cm.on(\"change\", function(_, change) {\n      var start = change.from.line, nBefore = change.to.line - change.from.line\n      var nAfter = change.text.length - 1, end = start + nAfter\n      if (nBefore || nAfter) self.map(start, nBefore, nAfter)\n      self.check(end, F_MARKER, self.hasMarker)\n      if (nBefore || nAfter) self.check(change.from.line, F_MARKER, self.hasMarker)\n    })\n    cm.on(\"viewportChange\", function() {\n      if (self.cm.doc.height != self.height) self.signal()\n    })\n  }\n\n  TrackAlignable.prototype = {\n    signal: function() {\n      CodeMirror.signal(this, \"realign\")\n      this.height = this.cm.doc.height\n    },\n\n    set: function(n, flags) {\n      var pos = -1\n      for (; pos < this.alignable.length; pos += 2) {\n        var diff = this.alignable[pos] - n\n        if (diff == 0) {\n          if ((this.alignable[pos + 1] & flags) == flags) return\n          this.alignable[pos + 1] |= flags\n          this.signal()\n          return\n        }\n        if (diff > 0) break\n      }\n      this.signal()\n      this.alignable.splice(pos, 0, n, flags)\n    },\n\n    find: function(n) {\n      for (var i = 0; i < this.alignable.length; i += 2)\n        if (this.alignable[i] == n) return i\n      return -1\n    },\n\n    check: function(n, flag, pred) {\n      var found = this.find(n)\n      if (found == -1 || !(this.alignable[found + 1] & flag)) return\n      if (!pred.call(this, n)) {\n        this.signal()\n        var flags = this.alignable[found + 1] & ~flag\n        if (flags) this.alignable[found + 1] = flags\n        else this.alignable.splice(found, 2)\n      }\n    },\n\n    hasMarker: function(n) {\n      var handle = this.cm.getLineHandle(n)\n      if (handle.markedSpans) for (var i = 0; i < handle.markedSpans.length; i++)\n        if (handle.markedSpans[i].marker.collapsed && handle.markedSpans[i].to != null)\n          return true\n      return false\n    },\n\n    hasWidget: function(n) {\n      var handle = this.cm.getLineHandle(n)\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++)\n        if (!handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true\n      return false\n    },\n\n    hasWidgetBelow: function(n) {\n      if (n == this.cm.lastLine()) return false\n      var handle = this.cm.getLineHandle(n + 1)\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++)\n        if (handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true\n      return false\n    },\n\n    map: function(from, nBefore, nAfter) {\n      var diff = nAfter - nBefore, to = from + nBefore, widgetFrom = -1, widgetTo = -1\n      for (var i = 0; i < this.alignable.length; i += 2) {\n        var n = this.alignable[i]\n        if (n == from && (this.alignable[i + 1] & F_WIDGET_BELOW)) widgetFrom = i\n        if (n == to && (this.alignable[i + 1] & F_WIDGET_BELOW)) widgetTo = i\n        if (n <= from) continue\n        else if (n < to) this.alignable.splice(i--, 2)\n        else this.alignable[i] += diff\n      }\n      if (widgetFrom > -1) {\n        var flags = this.alignable[widgetFrom + 1]\n        if (flags == F_WIDGET_BELOW) this.alignable.splice(widgetFrom, 2)\n        else this.alignable[widgetFrom + 1] = flags & ~F_WIDGET_BELOW\n      }\n      if (widgetTo > -1 && nAfter)\n        this.set(from + nAfter, F_WIDGET_BELOW)\n    }\n  }\n\n  function posMin(a, b) { return (a.line - b.line || a.ch - b.ch) < 0 ? a : b; }\n  function posMax(a, b) { return (a.line - b.line || a.ch - b.ch) > 0 ? a : b; }\n  function posEq(a, b) { return a.line == b.line && a.ch == b.ch; }\n\n  function findPrevDiff(chunks, start, isOrig) {\n    for (var i = chunks.length - 1; i >= 0; i--) {\n      var chunk = chunks[i];\n      var to = (isOrig ? chunk.origTo : chunk.editTo) - 1;\n      if (to < start) return to;\n    }\n  }\n\n  function findNextDiff(chunks, start, isOrig) {\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var from = (isOrig ? chunk.origFrom : chunk.editFrom);\n      if (from > start) return from;\n    }\n  }\n\n  function goNearbyDiff(cm, dir) {\n    var found = null, views = cm.state.diffViews, line = cm.getCursor().line;\n    if (views) for (var i = 0; i < views.length; i++) {\n      var dv = views[i], isOrig = cm == dv.orig;\n      ensureDiff(dv);\n      var pos = dir < 0 ? findPrevDiff(dv.chunks, line, isOrig) : findNextDiff(dv.chunks, line, isOrig);\n      if (pos != null && (found == null || (dir < 0 ? pos > found : pos < found)))\n        found = pos;\n    }\n    if (found != null)\n      cm.setCursor(found, 0);\n    else\n      return CodeMirror.Pass;\n  }\n\n  CodeMirror.commands.goNextDiff = function(cm) {\n    return goNearbyDiff(cm, 1);\n  };\n  CodeMirror.commands.goPrevDiff = function(cm) {\n    return goNearbyDiff(cm, -1);\n  };\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}